name: DEV Environment Deployment 

on:
  push:
    branches: 
      - dev
      - development

env:
  #AWS Credentials
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_KEY: ${{ secrets.AWS_SECRET_KEY }}

  # Application Info
  APPLICATION_NAME: yui
  APPLICATION_NAMESPACE: yui-dev
  APPLICATION_VERSION: 1.0.0-dev
  APPLICATION_PROFILE: 'dev'

jobs:
  build-and-push-docker-image:
    name: Push Docker image to AWS ECR
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Install kubectl
        uses: azure/setup-kubectl@v1
        with:
          version: 'v1.29.1'
        id: install
      
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ env.AWS_SECRET_KEY }}
          aws-region: ap-southeast-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, Tag, and Push the Image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: yui
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -t $ECR_REGISTRY/$ECR_REPOSITORY:latest .
          docker push -a $ECR_REGISTRY/$ECR_REPOSITORY

      - name: Update kube config
        run: aws eks update-kubeconfig --name ${{ secrets.KUBE_NAME }} --region ap-southeast-1
    
      - name: Deploy image to AWS EKS
        run: |
          kubectl apply -f eks/aws-auth.yml
          kubectl apply -f eks/deployment.yml
          kubectl apply -f eks/service.yml
          kubectl apply -f eks/issuer.yml
          kubectl apply -f eks/ingress.yml 